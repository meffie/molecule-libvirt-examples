---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    libvirt_uri: qemu+ssh://mars.devlab.sinenomine.net/system
    vm_name: m-instance-1
    vm_template: zz-cent7.5-templ
    vm_source: agent
    vm_user: devlab
    #vm_ssh_pub: devlab.pub
    vm_root_pass: secret
  tasks:

    - name: Get guest list
      virt:
        command: list_vms
        uri: "{{ libvirt_uri }}"
      register: virt_guests

    - debug:
        var: virt_guests

    - name: Clone template
      command:
        cmd: >
          virt-clone --connect {{ libvirt_uri }}
          --original {{ vm_template }}
          --name {{ vm_name }}
          --auto-clone
      register: virt_clone
      when: vm_name is not in virt_guests.list_vms

    - name: Stop guest
      virt:
        name: "{{ vm_name }}"
        state: shutdown
        uri: "{{ libvirt_uri }}"

    - slurp:
        src: /home/mmeffie/.ssh/devlab.pub
      register: key

    - set_fact:
        vm_ssh_pub: "{{ key.content | b64decode }}"

    - debug:
        var: vm_ssh_pub

    - name: Prepare instance image
      command: >
        ssh mars.devlab.sinenomine.net --
        "sudo -n virt-customize
        --domain {{ vm_name }}
        --hostname {{ vm_name }}
        --run-command 'id -u {{ vm_user }} || useradd -m {{ vm_user }}'
        --run-command 'mkdir -p /etc/cloud && touch /etc/cloud/cloud-init.disabled'
        --run-command 'ssh-keygen -A'
        --ssh-inject '{{ vm_user }}:string:{{ vm_ssh_pub }}'
        --root-password 'password:{{ vm_root_pass }}'"
      register: virt_cust

    - debug:
        var: virt_cust

    - fail:
        msg: breakpt

    - name: Start guest
      virt:
        name: "{{ vm_name }}"
        state: running
        autostart: yes
        uri: "{{ libvirt_uri }}"

    - name: Wait for address
      shell: >
        virsh --connect {{ libvirt_uri }} domifaddr --source {{ vm_source }} {{ vm_name }} |
        awk '/ipv4/ {print $4}' | grep -v ^127 | cut -f1 -d/
      register: ip_out
      until: ip_out.stdout_lines|length > 0
      delay: 3
      retries: 100
      changed_when: false

    - set_fact:
        vm_address: "{{ ip_out.stdout_lines[0] }}"

    - debug:
        var: vm_address

    - name: Wait for open ssh port
      wait_for:
        state: started
        port: 22
        host: "{{ vm_address }}"
        delay: 0
        sleep: 2
        timeout: 240
      register: wait_results

    - debug:
        var: wait_results
