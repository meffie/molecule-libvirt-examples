---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    #libvirt_host: mars.devlab.sinenomine.net
    #libvirt_uri: qemu+ssh://{{ libvirt_host }}/system
    libvirt_host: localhost
    libvirt_uri: qemu:///system
    vm_name: m-instance-1
    vm_template: zz-cent7.5-templ
    vm_source: agent
    vm_user: devlab
    vm_root_pass: secret
    vm_selinux: no

  tasks:
    - name: Read ssh public key
      block:
      - slurp:
          src: /home/mmeffie/.ssh/devlab.pub
        register: key_data
      - set_fact:
          vm_ssh_pub: "{{ key_data.content | b64decode }}"

    - name: Look up guests
      virt:
        command: list_vms
        uri: "{{ libvirt_uri }}"
      register: virt_guests




    - fail:

    - name: Clone template to instance
      command:
        cmd: >
          virt-clone --connect {{ libvirt_uri }}
          --original {{ vm_template }}
          --name {{ vm_name }}
          --auto-clone
      register: virt_clone
      when: vm_name is not in virt_guests.list_vms

    - name: Get instance status
      virt:
        name: "{{ vm_name }}"
        command: status
        uri: "{{ libvirt_uri }}"
      register: virt_status

    - name: Prepare instance image
      command: >
        ssh {{ libvirt_host }} --
        "sudo -n virt-customize
        --domain {{ vm_name }}
        --hostname {{ vm_name }}
        --run-command 'id -u {{ vm_user }} || useradd -m {{ vm_user }}'
        --run-command 'mkdir -p /etc/cloud && touch /etc/cloud/cloud-init.disabled'
        --run-command 'ssh-keygen -A'
        --ssh-inject '{{ vm_user }}:string:{{ vm_ssh_pub }}'
        --root-password 'password:{{ vm_root_pass }}'
        {{ vm_selinux | ternary('--selinux-relabel', '') }}"
      when: virt_status.status == 'shutdown'
      register: virt_cust

    - name: Start instance
      virt:
        name: "{{ vm_name }}"
        state: running
        autostart: yes
        uri: "{{ libvirt_uri }}"

    - name: Starting instance
      shell: >
        virsh --connect {{ libvirt_uri }} domifaddr --full --source {{ vm_source }} {{ vm_name }} |
        awk '$1 != "lo" && $3 == "ipv4" {print $4}'
      register: ip_out
      until: ip_out.stdout_lines|length > 0
      delay: 5
      retries: 100
      changed_when: false

    - name: Set instance address fact
      set_fact:
        vm_address: "{{ ip_out.stdout_lines[0] | regex_replace('/[0-9]*$')  }}"

    - name: Wait for instance ssh port
      wait_for:
        state: started
        port: 22
        host: "{{ vm_address }}"
        delay: 0
        sleep: 2
        timeout: 240